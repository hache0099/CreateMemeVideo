#!/bin/bash

text_size=75
show_img=0
POSITIONAL_ARGS=()
TMP_IMAGE_FOLDER='/tmp/'
FONT='helvetica'

VERSION="0.1.0"

help_text () {
	while IFS= read -r line; do
		printf "%s\n" "$line"
	done <<-EOF

	Usage:
	  ${0##*/} [<VIDEO_PATH>] [<TEXT>] [--textsize SIZE]
	  	[--showimage] [--font FONT | --font <FONT_FILE_PATH>]
	
	Options
	  --textsize SIZE	Set the size of the text (default 75)
	  --showimage		Show the caption image before making the video
	  --font FONT		Set a font for the caption text (default: helvetica) 

	EOF
}

while [[ $# -gt 0 ]]; do
	case $1 in
		--textsize)
			text_size=$2
			shift
			shift
			;;
		--showimage)
			show_img=1
			shift
			;;
		--font)
			FONT=$2
			shift
			shift
			;;
		-h)
			help_text
			exit 0
			;;
		*)
			POSITIONAL_ARGS+=("$1")
			shift
			;;
	esac
done


#make_random_name (){
#	RESULT=`echo $RANDOM | md5sum | head -c 20`
#	echo ${RESULT}.png
#}

get_video_size () {
	ffprobe -v error -show_entries stream=width -of csv=p=0:s=x "${1}"
}

#~ -pointsize $text_size 
make_image () {
	echo $1 $2 $3 $FONT
	convert \
		-background white \
		-fill black \
		-font $FONT \
		-pointsize $text_size \
		-size $1x \
		-gravity center \
		caption:"${2}" \
		"${3}"
}

open_image() {
	echo 'Opening image'
	xdg-open $IMG_PATH
	echo -n "Want to continue? [Y/n]: "
	read opt
	
	if [[ $opt =~ ^[Nn]$ ]];
	then
		exit 0;
	fi
}

make_video (){
	echo "make_video args: "
	echo $1 $2 $3
	ffmpeg -loglevel error -y -i "${2}" \
	-i "${1}" \
	-filter_complex \
	"[1:v]pad=iw:ih+`identify -format '%h' $2`:0:oh-ih,overlay=0:0" \
	"${3}"
}

set -- "${POSITIONAL_ARGS[@]}"
echo 'Creating image'
IMG_NAME="tmp_img_out_9483938.png"
IMG_PATH="${TMP_IMAGE_FOLDER}${IMG_NAME}"
make_image $(get_video_size "${1}") "$2" $IMG_PATH

if [[ show_img -eq 1 ]];
then
	open_image
fi

echo 'Processing video...'
make_video "${1}" $IMG_PATH "${3}"

echo 'Video finished'
echo 'Deleting image'
rm -f $IMG_PATH
